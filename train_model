# train_model.py

import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import OneHotEncoder
from sklearn.pipeline import make_pipeline
import joblib
import os

# Load data
df = pd.read_csv("expenses.csv", parse_dates=["Date"])

# Extract year and month
df["YearMonth"] = df["Date"].dt.to_period("M").astype(str)

# Group by month and category
monthly = df.groupby(["YearMonth", "Category"])["Amount"].sum().reset_index()

# Create numeric month index (e.g., Jan 2025 -> 0, Feb 2025 -> 1, ...)
month_map = {month: idx for idx, month in enumerate(sorted(monthly["YearMonth"].unique()))}
monthly["MonthIndex"] = monthly["YearMonth"].map(month_map)

# Train model: Amount = f(MonthIndex, Category)
X = monthly[["MonthIndex", "Category"]]
y = monthly["Amount"]

# Use one-hot encoding for category
model = make_pipeline(
    OneHotEncoder(handle_unknown='ignore'),
    LinearRegression()
)

model.fit(X, y)

# Save model
os.makedirs("models", exist_ok=True)
joblib.dump(model, "models/expense_predictor.pkl")

print("âœ… Model trained and saved to models/expense_predictor.pkl")
